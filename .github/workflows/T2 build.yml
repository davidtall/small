name: T2 Build

on:
  workflow_dispatch:
  push:
    tags:
      - v.**

jobs:
  build:
    name: build ${{ matrix.arch }}-${{ matrix.release }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - master
        arch:
          - aarch64_cortex-a53

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Build
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.release }}
#          FEEDNAME: packages_ci
          PACKAGES: vim
          NO_DEFAULT_FEEDS: true
          EXTRA_FEEDS: |
            src-git|packages|https://github.com/immortalwrt/packages.git
            src-git|luci|https://github.com/immortalwrt/luci.git
            src-git|routing|https://git.openwrt.org/feed/routing.git
#          ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
#          FEED_DIR: ${{ github.workspace }}/feed
#          NO_REFRESH_CHECK: true
#          IGNORE_ERRORS: true
#          PRIVATE_KEY: CLSKzUBd0hzKWR6A7sJ80Rfc4fliZvfpYIlagYt8x3o=
      - name: Verify packages saved
        run: find bin/packages/${{ matrix.arch }}/packages/ -maxdepth 1 -name '*.[ai]pk' -type f | grep .

      - name: Store packages
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.arch }}-${{ matrix.release }}
          path: bin/packages/${{ matrix.arch }}/packages/*.apk

      - name: Zip packages
        run: |
          zip -j ${{ matrix.arch }}-${{ matrix.release }}.zip bin/packages/${{ matrix.arch }}/packages/*.apk
          echo -e "**文件说明** 🎈:\n" >> release.txt
          echo -e "1. 默认ssr与passwall的插件与依赖整合包\n" >> release.txt
          echo -e "2. 使用方法：将整合包上传到openwrt设备的tmp目录，输入命令 \`opkg install *.apk\`\n" >> release.txt
          echo -e "3. 默认压缩包里包含ssr passwall bypass passwall2 插件\n" >> release.txt
          echo -e "4. 如果单独安装ssr与依赖，\`rm -rf {*passwall*,*bypass*,*homeproxy*}\`\n" >> release.txt
          
      - name: Upload packages
        uses: ncipollo/release-action@main
        with:
          artifacts: "${{ matrix.arch }}-${{ matrix.release }}.zip,bin/packages/${{ matrix.arch }}/packages/*.apk"
          allowUpdates: true
          replacesArtifacts: true
          bodyFile: "release.txt"
          tag: ${{ github.run_number }}-${{ matrix.arch }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 10
          keep_minimum_runs: 2
    
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 60
          delete_tags: true
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
